<Window x:Class="ProFer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Title="Meskalero" Height="730" Width="900" Icon="/img/ace.png" ResizeMode="CanMinimize" >

    <!--#region Templates and Resources -->
    <Window.Resources>
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="Background" Value="{Binding ButtonColor}"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="ScoreDisplay" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="Height" Value="17"/>
            <Setter Property="Margin" Value="15,5"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DisplayNines" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Neuner}" Value="-1">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Neuner}" Value="5">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Neuner}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayTens" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Zehner}" Value="-2">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Zehner}" Value="10">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Zehner}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayJacks" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Buben}" Value="-3">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Buben}" Value="15">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Buben}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayQueens" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Damen}" Value="-4">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Damen}" Value="16">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Damen}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayKings" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Koenige}" Value="-5">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Koenige}" Value="25">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Koenige}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayAces" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Asse}" Value="-6">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Asse}" Value="30">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Asse}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayStreet" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Strasse}" Value="-1">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Strasse}" Value="25">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Strasse}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayFull" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Full}" Value="-1">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Full}" Value="35">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Full}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayPoker" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Poker}" Value="-1">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Poker}" Value="45">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Poker}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DisplayGrand" TargetType="TextBlock" BasedOn="{StaticResource ScoreDisplay}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Grande}" Value="-1">
                    <Setter Property="Background" Value="Red"></Setter>
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Grande}" Value="100">
                    <Setter Property="Background" Value="LightGreen"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Grande}" Value="0">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,0.8" StartPoint="0.5,0">
            <GradientStop Color="White" Offset="1"/>
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="LightSteelBlue" Offset="0.51"/>
        </LinearGradientBrush>
    </Window.Background>
    <!--#endregion-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <!--#region Client/Server buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" >
            <StackPanel Width="300" Orientation="Vertical" Margin="30,5,0,0">
                <Label Content="Name" FontWeight="Bold"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NameVisibility, Mode=OneWay}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Content="Act as Server" Command="{Binding ActAsServerBtnCommand}" Width="100" Style="{StaticResource RoundedButton}" Margin="40,0,10,0">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <TextBlock VerticalAlignment="Center" Text="or" Margin="0,0,0,3"></TextBlock>
                <Button Content="Connect" HorizontalAlignment="Right" Command="{Binding ActAsClientBtnCommand}" Width="100" Style="{StaticResource RoundedButton}" Margin="10,0,10,0">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <TextBlock VerticalAlignment="Center" Text="to" Margin="0,0,0,3"></TextBlock>
                <StackPanel Width="110" Orientation="Vertical" Margin="10,5,0,0">
                    <Label Content="IP:Port" FontWeight="Bold" HorizontalContentAlignment="Right"></Label>
                    <TextBox Text="{Binding IPPort, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding NameVisibility, Mode=OneWay}" HorizontalContentAlignment="Right" Margin="5,0,0,0"/>
                </StackPanel>
            </StackPanel></StackPanel>
        <!--#endregion-->

        <!--#region Player-Output  -->
        <StackPanel Orientation="Horizontal" Margin="10,10,10,10" Grid.Row="1">
            <StackPanel Width="200" Orientation="Vertical" Margin="20,0,0,0">
                <Label Content="Players" FontWeight="Bold"></Label>
                <ListBox Height="240" ItemsSource="{Binding PlayerList}" SelectedItem="{Binding SelectedUser}" Margin="0,0,0,15" />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Style="{StaticResource ResourceKey=RoundedButton}" Content="Start" Command="{Binding StartGameCommand}" Margin="0,0,10,0">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Style="{StaticResource ResourceKey=RoundedButton}" Content="Kick" Command="{Binding DropClientBtnCommand}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </StackPanel>
            <!--#endregion-->

            <!--#region Take-Buttons  -->
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical" Margin="25,36,5,10">
                <Button Content="Nines" Command="{Binding TakeNinesBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                </Button>
                    <Button Content="Tens" Command="{Binding TakeTensBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                </Button>
                    <Button Content="Jacks" Command="{Binding TakeJacksBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Queens" Command="{Binding TakeQueensBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Kings" Command="{Binding TakeKingsBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Aces" Command="{Binding TakeAcesBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Street" Command="{Binding TakeStreetBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Full" Command="{Binding TakeFullBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Poker" Command="{Binding TakePokerBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Content="Grand" Command="{Binding TakeGrandBtnCommand}" Width="70" Style="{StaticResource RoundedButton}" HorizontalAlignment="Right">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
                <!--#endregion-->

                <!--#region Scores-Output  -->
                <ItemsControl ItemsSource="{Binding PlayerList}"  Grid.Row="0" Grid.Column="1" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel HorizontalAlignment="Left" Width="500" Orientation="Horizontal" Margin="0,10,10,10" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" Width="75" Background="White" Opacity="0.8">
                                <Label Content="{Binding Name}" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="5,0" FontFamily="Comic Sans MS" FontWeight="Bold"/>
                                <TextBlock Text="{Binding Neuner}" Style="{StaticResource DisplayNines}"></TextBlock>
                                <TextBlock Text="{Binding Zehner}" Style="{StaticResource DisplayTens}"></TextBlock>
                                <TextBlock Text="{Binding Buben}" Style="{StaticResource DisplayJacks}"></TextBlock>
                                <TextBlock Text="{Binding Damen}" Style="{StaticResource DisplayQueens}"></TextBlock>
                                <TextBlock Text="{Binding Koenige}" Style="{StaticResource DisplayKings}"></TextBlock>
                                <TextBlock Text="{Binding Asse}" Style="{StaticResource DisplayAces}"></TextBlock>
                                <TextBlock Text="{Binding Strasse}" Style="{StaticResource DisplayStreet}"></TextBlock>
                                <TextBlock Text="{Binding Full}" Style="{StaticResource DisplayFull}"></TextBlock>
                                <TextBlock Text="{Binding Poker}" Style="{StaticResource DisplayPoker}"></TextBlock>
                                <TextBlock Text="{Binding Grande}" Style="{StaticResource DisplayGrand}"></TextBlock>
                                <Label BorderThickness="0,2,0,0" BorderBrush="Black" Content="{Binding SumRolls}" VerticalAlignment="Center" Margin="5,5" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            </StackPanel>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  ItemsSource="{Binding Messages}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinHeight="70" HorizontalContentAlignment="Center" BorderThickness="1" BorderBrush="Black" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True" MaxHeight="70" FontFamily="Comic Sans MS" Padding="2" MaxWidth="600" SelectedIndex="0" SelectionMode="Single">
                    <ListView.Background>
                        <SolidColorBrush Color="White" Opacity="0.5"/>
                    </ListView.Background>
                </ListView>
            </Grid>
        </StackPanel>
        <!--#endregion-->

        <!--#region dice display  -->
        <ListBox ItemsSource="{Binding SelectableRoll, NotifyOnSourceUpdated=True}" Margin="45,15,0,15" Grid.Row="2" HorizontalAlignment="Left" SelectionMode="Multiple" SelectedItem="{Binding Path=RollSelectedItem,UpdateSourceTrigger=PropertyChanged}" IsSynchronizedWithCurrentItem="True">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Width="100" Height="100">
                        <Image Source="{Binding DiceImage, NotifyOnSourceUpdated=True}"></Image>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <!--#endregion-->

        <Button Grid.Row="2" Content="Roll" Command="{Binding RollCommand}" Width="100" Style="{StaticResource RoundedButton}" Margin="0,0,20,0" HorizontalAlignment="Right">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
    </Grid>
</Window>
